on:
  workflow_call:
    inputs:
      deployTo:
        description: Directory where to deploy to (if empty that home dir is used)
        type: string
        required: false
      ecosystemFile:
        description: Override for which file to use for ecosystem.config.js
        type: string
        required: false
        default: 'ecosystem.config.js'
      applicationSuffixId:
        description: Suffix id for the application (set to 1 for 1st application, 2 for 2nd, etc)
        type: string
        required: true
      environment:
        description: The github environment to inherit secrets from
        type: string
        required: true
      serverHost:
        type: string
        required: true
      serverPort:
        type: string
        required: true
      serverUser:
        type: string
        required: true
      additionalPath:
        description: Additional paths that should be prefixed to PATH
        type: string
        required: false
        default: '/data/web/.npm/bin/'

jobs:
  activate-applications:
    name: Activate applications
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Activate
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ inputs.serverHost }}
          username: ${{ inputs.serverUser }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ inputs.serverPort }}
          envs: GITHUB_SHA,DOMAIN
          script_stop: true
          script: |
            export PATH="${{ inputs.additionalPath }}:$PATH"
            cp ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/current/${{ inputs.ecosystemFile }} ${{ inputs.deployTo }}ecosystem.config.js
            cd ${{ inputs.deployTo }}
            export NODE_OPTIONS=--max_old_space_size=2048
            pm2 reload ecosystem.config.js
            # need to scale up/down if needed. Will execute for example: pm2 scale graphcommerceb2b 10
            export toScale=$(node -pe 'JSON.stringify(eval(process.argv[1]).apps)' "$(cat ecosystem.config.js)" | jq -r '.[] | {name, instances} | "pm2 scale " + (.name|tostring) + " " + (.instances|tostring)')
            SAVEIFS=$IFS   # Save current IFS (Internal Field Separator)
            IFS=$'\n'      # Change IFS to newline char
            toScale=($toScale) # split the string into an array by the same name
            IFS=$SAVEIFS   # Restore original IFS
            for i in "${toScale[@]}"
            do
              echo "$i"
              $($i)
            done
            # Force reload of in-memory PM2 with local version of PM2, this is needed when deployment path and other settings change
            pm2 update
            # get a list of applications that are running and that are in the ecosystem.config.js. Find the diff and then remove the old graphcommerce applications.
            export toDelete=$(comm -13 <(node -pe 'JSON.stringify(eval(process.argv[1]).apps)' "$(cat ecosystem.config.js)" | jq -r '.[] | {name, instances} | (.name|tostring)' | sort | grep '^graphcommerce') <(pm2 list | sed -e '1,3d' | sed -e '$ d' | awk  '{print $4}' | sort | uniq | grep '^graphcommerce'))
            SAVEIFS=$IFS   # Save current IFS (Internal Field Separator)
            IFS=$'\n'      # Change IFS to newline char
            toDelete=($toDelete) # split the string into an array by the same name
            IFS=$SAVEIFS   # Restore original IFS
            if [[ "$toDelete" ]] ; then
              for i in "${toDelete[@]}"
              do
                echo "pm2 delete $i"
                pm2 delete $i
              done
            fi
            # Save current process state so processes get restored across reboots
            pm2 save
