on:
  workflow_call:
    inputs:
      deployTo:
        description: Directory where to deploy to (if empty that home dir is used)
        type: string
        required: false
      applicationSuffixId:
        description: Suffix id for the application (set to 1 for 1st application, 2 for 2nd, etc)
        type: string
        required: true
      environment:
        description: The github environment to inherit secrets from
        type: string
        required: true
      serverHost:
        type: string
        required: true
      serverPort:
        type: string
        required: true
      serverUser:
        type: string
        required: true

jobs:
  activate-artifact:
    name: Upload and activate artifact
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: deployment-artifact
      - name: Upload to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ inputs.serverHost }}
          username: ${{ inputs.serverUser }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ inputs.serverPort }}
          source: ${{ github.sha }}_${{ inputs.applicationSuffixId }}.tar.gz
          target: ${{ inputs.deployTo }}./artifacts
      - name: Node version
        run: echo "$(node -v)"
        shell: bash
      - name: Activate
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ inputs.serverHost }}
          username: ${{ inputs.serverUser }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ inputs.serverPort }}
          source: ${{ github.sha }}_${{ inputs.applicationSuffixId }}.tar.gz
          target: ${{ inputs.deployTo }}./artifacts
          envs: GITHUB_SHA,DOMAIN
          script_stop: true
          script: |
            echo $(node -v)
            release_folder=$(date +%Y%m%d%H%M%S)
            mkdir -p ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/$release_folder
            mkdir -p ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/shared/.next/cache/images
            tar xzf ${{ inputs.deployTo }}./artifacts/${GITHUB_SHA}_${{ inputs.applicationSuffixId }}.tar.gz -C ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/$release_folder
            rm -rf ${{ inputs.deployTo }}./artifacts/${GITHUB_SHA}_${{ inputs.applicationSuffixId }}.tar.gz
            ln -s ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/$release_folder ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/current
            ln -s ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/shared/.next/cache/images ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/current/.next/cache/images
            mv ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/releases/current ${{ inputs.deployTo }}./graphcommerce${{ inputs.applicationSuffixId }}/
            ls -dp -x1 "${{ inputs.deployTo }}/graphcommerce${{ inputs.applicationSuffixId }}/releases/"* | egrep /$ | head -n -2 | xargs -d '\n' rm -rf || true
